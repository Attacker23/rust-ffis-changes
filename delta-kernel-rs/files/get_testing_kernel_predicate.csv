side,file_path,has_no_body,extern_c,source,line_count,line_range
C,E:\rust_projects\c\delta-kernel-rs\ffi\examples\visit-expression\visit_expression.c,True,False,SharedPredicate* pred = get_testing_kernel_predicate();,1,"(12, 12)"
Rust,E:\rust_projects\c\delta-kernel-rs\ffi\src\test_ffi.rs,False,True,"pub unsafe extern ""C"" fn get_testing_kernel_predicate() -> Handle<SharedPredicate> {
    let array_type = ArrayType::new(
        DataType::Primitive(delta_kernel::schema::PrimitiveType::Short),
        false,
    );
    let array_data =
        ArrayData::try_new(array_type.clone(), vec![Scalar::Short(5), Scalar::Short(0)]).unwrap();

    let mut sub_exprs = vec![
        column_pred!(""col""),
        Pred::literal(true),
        Pred::literal(false),
        Pred::binary(
            BinaryPredicateOp::In,
            Expr::literal(10),
            Scalar::Array(array_data.clone()),
        ),
        Pred::binary(
            BinaryPredicateOp::NotIn,
            Expr::literal(10),
            Scalar::Array(array_data),
        ),
        Pred::or_from(vec![
            Pred::eq(Expr::literal(5), Expr::literal(10)),
            Pred::ne(Expr::literal(20), Expr::literal(10)),
        ]),
        Pred::is_not_null(column_expr!(""col"")),
    ];
    sub_exprs.extend(
        [
            BinaryPredicateOp::Equal,
            BinaryPredicateOp::NotEqual,
            BinaryPredicateOp::LessThan,
            BinaryPredicateOp::LessThanOrEqual,
            BinaryPredicateOp::GreaterThan,
            BinaryPredicateOp::GreaterThanOrEqual,
            BinaryPredicateOp::Distinct,
        ]
        .into_iter()
        .map(|op| Pred::binary(op, Expr::literal(0), Expr::literal(0))),
    );

    Arc::new(Pred::and_from(sub_exprs)).into()
}",42,"(103, 146)"
