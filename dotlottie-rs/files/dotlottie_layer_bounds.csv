side,file_path,has_no_body,extern_c,source,line_count,line_range
C,E:\rust_projects\c\dotlottie-rs\dotlottie-ffi\bindings.h,True,False,"int32_t dotlottie_layer_bounds(struct DotLottiePlayer *ptr,
                               const char *layer_name,
                               struct LayerBoundingBox *bounding_box);",3,"(259, 261)"
Rust,E:\rust_projects\c\dotlottie-rs\dotlottie-ffi\src\ffi\mod.rs,False,True,"pub unsafe extern ""C"" fn dotlottie_layer_bounds(
    ptr: *mut DotLottiePlayer,
    layer_name: *const c_char,
    bounding_box: *mut LayerBoundingBox,
) -> i32 {
    exec_dotlottie_player_op(ptr, |dotlottie_player| {
        if bounding_box.is_null() {
            return DOTLOTTIE_INVALID_PARAMETER;
        }
        let bounding_box = match bounding_box.as_mut() {
            Some(v) => v,
            None => return DOTLOTTIE_INVALID_PARAMETER,
        };
        let layer_name = match DotLottieString::read(layer_name) {
            Ok(v) => v,
            Err(_) => return DOTLOTTIE_INVALID_PARAMETER,
        };
        match dotlottie_player.get_layer_bounds(&layer_name).as_slice() {
            [x1, y1, x2, y2, x3, y3, x4, y4] => {
                bounding_box.x1 = *x1;
                bounding_box.y1 = *y1;
                bounding_box.x2 = *x2;
                bounding_box.y2 = *y2;
                bounding_box.x3 = *x3;
                bounding_box.y3 = *y3;
                bounding_box.x4 = *x4;
                bounding_box.y4 = *y4;

                DOTLOTTIE_SUCCESS
            }
            _ => DOTLOTTIE_ERROR,
        }
    })
}",33,"(541, 574)"
