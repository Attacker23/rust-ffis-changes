side,file_path,has_no_body,extern_c,source,line_count,line_range
C,E:\rust_projects\c\blazesym\capi\include\blazesym.h,True,True,blaze_normalizer *blaze_normalizer_new_opts(const struct blaze_normalizer_opts *opts);,1,"(1183, 1183)"
Rust,E:\rust_projects\c\blazesym\capi\src\normalize.rs,False,True,"pub unsafe extern ""C"" fn blaze_normalizer_new_opts(
    opts: *const blaze_normalizer_opts,
) -> *mut blaze_normalizer {
    if !input_zeroed!(opts, blaze_normalizer_opts) {
        let () = set_last_err(blaze_err::INVALID_INPUT);
        return ptr::null_mut()
    }
    let opts = input_sanitize!(opts, blaze_normalizer_opts);

    let blaze_normalizer_opts {
        type_size: _,
        use_procmap_query,
        cache_vmas,
        build_ids,
        cache_build_ids,
        reserved: _,
    } = opts;

    let normalizer = Normalizer::builder()
        .enable_procmap_query(use_procmap_query)
        .enable_vma_caching(cache_vmas)
        .enable_build_ids(build_ids)
        .enable_build_id_caching(cache_build_ids)
        .build();
    let normalizer_box = Box::new(normalizer);
    let () = set_last_err(blaze_err::OK);
    Box::into_raw(normalizer_box)
}",26,"(201, 228)"
