[
    {
        "function_name": "blaze_normalizer_new",
        "file_name": "E:\\rust_projects\\c\\blazesym\\capi\\include\\blazesym.h",
        "commit_count": 2,
        "commits": [
            {
                "commit_info": "5c0b6e36d7a828adebffa1311ccef7a6e3676ff1",
                "commit_title": "Introduce blazesym-c crate\n\nThis change moves all C API functionality into the blazesym-c crate in\nthe existing workspace. Doing so ensures better isolation between the\ncore Rust part and the C API and it will allow us to version the C API\ndifferent from the main Rust crate.\n\nCloses: #344\n\nSigned-off-by: Daniel M眉ller <deso@posteo.net>",
                "commit_date": "Thu Nov 16 13:55:59 2023 -0800",
                "added_functions": [
                    "blaze_normalizer *blaze_normalizer_new(void);"
                ]
            },
            {
                "commit_info": "66e4c3a1c478297f21ecba6c1e845c39a88e2bdf",
                "commit_title": "Introduce Normalizer type\n\nIn the future we may want to support more features in the realm of\naddress normalization. To make that possible without breaking\ncompatibility, introduce a Normalizer type that can store configuration,\nfor example. Having such an object around will also allow us to cache\nmore state between invocations.\n\nSigned-off-by: Daniel M眉ller <deso@posteo.net>",
                "commit_date": "Wed Apr 26 10:16:07 2023 -0700",
                "added_functions": [
                    "struct blaze_normalizer *blaze_normalizer_new(void);"
                ]
            }
        ]
    },
    {
        "function_name": "blaze_normalizer_new",
        "file_name": "E:\\rust_projects\\c\\blazesym\\capi\\src\\normalize.rs",
        "commit_count": 2,
        "commits": [
            {
                "commit_info": "5c0b6e36d7a828adebffa1311ccef7a6e3676ff1",
                "commit_title": "Introduce blazesym-c crate\n\nThis change moves all C API functionality into the blazesym-c crate in\nthe existing workspace. Doing so ensures better isolation between the\ncore Rust part and the C API and it will allow us to version the C API\ndifferent from the main Rust crate.\n\nCloses: #344\n\nSigned-off-by: Daniel M眉ller <deso@posteo.net>",
                "commit_date": "Thu Nov 16 13:55:59 2023 -0800",
                "added_functions": [
                    "pub extern \"C\" fn blaze_normalizer_new() -> *mut blaze_normalizer {"
                ]
            },
            {
                "commit_info": "66e4c3a1c478297f21ecba6c1e845c39a88e2bdf",
                "commit_title": "Introduce Normalizer type\n\nIn the future we may want to support more features in the realm of\naddress normalization. To make that possible without breaking\ncompatibility, introduce a Normalizer type that can store configuration,\nfor example. Having such an object around will also allow us to cache\nmore state between invocations.\n\nSigned-off-by: Daniel M眉ller <deso@posteo.net>",
                "commit_date": "Wed Apr 26 10:16:07 2023 -0700",
                "added_functions": [
                    "pub extern \"C\" fn blaze_normalizer_new() -> *mut Normalizer {"
                ]
            }
        ]
    }
]
